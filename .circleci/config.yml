version: 2

jobs:
  checkout_and_compile:
    docker:
      - image: cimg/node:16.18
    working_directory: ~/index-coop-smart-contracts
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Set Up Environment Variables
          command: cp .env.default .env
      - restore_cache:
          key: module-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Fetch Dependencies
          command: yarn install
      - save_cache:
          key: module-cache-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Transpile Contracts
          command: yarn build
      - run:
          name: Lint
          command: yarn lint
      - save_cache:
          key: compiled-env-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/index-coop-smart-contracts
  test:
    docker:
      - image: cimg/node:16.18
    working_directory: ~/index-coop-smart-contracts
    parallelism: 2
    steps:
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Fetch solc version
          command: docker pull ethereum/solc:0.6.10
      - restore_cache:
          key: compiled-env-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Set Up Environment Variables
          command: cp .env.default .env
      - run:
          name: Test RPC
          command: yarn chain
          background: true
      - run:
          name: Hardhat Test
          command: |
            TEST_FILES="$(circleci tests glob "./test/**/*.spec.ts" | circleci tests split)"
            yarn test ${TEST_FILES}


  test_integration_polygon:
    docker:
      - image: cimg/node:16.18
    working_directory: ~/index-coop-smart-contracts
    steps:
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Fetch solc version
          command: docker pull ethereum/solc:0.6.10
      - restore_cache:
          key: compiled-env-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Set Up Environment Variables
          command: cp .env.default .env
      - run:
          name: Test RPC
          command: yarn chain:fork:polygon
          background: true
      - run:
          name: Hardhat Test
          command: yarn run test:integration:polygon

  test_integration_optimism:
    docker:
      - image: cimg/node:16.18
    working_directory: ~/index-coop-smart-contracts
    steps:
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Fetch solc version
          command: docker pull ethereum/solc:0.6.10
      - restore_cache:
          key: compiled-env-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Set Up Environment Variables
          command: cp .env.default .env
      - run:
          name: Test RPC
          command: yarn chain:fork:optimism
          background: true
      - run:
          name: Hardhat Test
          command: yarn run test:integration:optimism

  test_integration_ethereum:
    docker:
      - image: cimg/node:16.18
    working_directory: ~/index-coop-smart-contracts
    steps:
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Fetch solc version
          command: docker pull ethereum/solc:0.6.10
      - restore_cache:
          key: compiled-env-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Set Up Environment Variables
          command: cp .env.default .env
      - run:
          name: Test RPC
          command: yarn chain:fork:ethereum
          background: true
      - run:
          name: Hardhat Test
          command: yarn run test:integration:ethereum

  coverage:
    docker:
      - image: cimg/node:16.18
    working_directory: ~/index-coop-smart-contracts
    parallelism: 2
    steps:
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Fetch solc version
          command: docker pull ethereum/solc:0.6.10
      - restore_cache:
          key: compiled-env-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Set Up Environment Variables
          command: cp .env.default .env
      - run:
          name: Create shared coverage outputs folder
          command: mkdir -p /tmp/coverage
      - run:
          name: Coverage
          command: |
            TEST_FILES="{$(circleci tests glob "./test/**/*.spec.ts" | \
              circleci tests split | xargs | sed -e 's/ /,/g')}"
            yarn coverage -- --testfiles "$TEST_FILES"
      - run:
          name: Save coverage
          command: |
            cp coverage.json /tmp/coverage/cov_$CIRCLE_NODE_INDEX.json
            chmod -R 777 /tmp/coverage/cov_$CIRCLE_NODE_INDEX.json
      - persist_to_workspace:
          root: /tmp/coverage
          paths:
            - cov_0.json
            - cov_1.json


  report_coverage:
    docker:
      - image: cimg/node:16.18
    working_directory: ~/index-coop-smart-contracts
    steps:
      - attach_workspace:
          at: /tmp/coverage
      - restore_cache:
          key: compiled-env-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Combine coverage reports
          command: |
            mkdir -p reports
            cp -R /tmp/coverage/* .
            npx istanbul-combine-updated -r lcov cov_0.json cov_1.json cov_fork.json
      - run:
          name: Upload coverage
          command: |
            cat coverage/lcov.info | ./node_modules/.bin/coveralls

workflows:
  version: 2
  build-and-test:
    jobs:
      - checkout_and_compile
      - test:
          requires:
            - checkout_and_compile
      - test_integration_ethereum:
          requires:
            - checkout_and_compile
      - test_integration_polygon:
          requires:
            - checkout_and_compile
      - test_integration_optimism:
          requires:
            - checkout_and_compile
      - coverage:
          requires:
            - checkout_and_compile
      - report_coverage:
          requires:
            - coverage
